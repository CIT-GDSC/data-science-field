[
	{
		"metadata": {
			"outputType": "error",
			"originalError": {
				"output_type": "error",
				"ename": "ValueError",
				"evalue": "could not convert string to float: 'LP001002 '",
				"traceback": [
					"\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
					"\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
					"Cell \u001b[0;32mIn[56], line 15\u001b[0m\n\u001b[1;32m     13\u001b[0m \u001b[39mimport\u001b[39;00m \u001b[39mseaborn\u001b[39;00m \u001b[39mas\u001b[39;00m \u001b[39msns\u001b[39;00m\n\u001b[1;32m     14\u001b[0m get_ipython()\u001b[39m.\u001b[39mrun_line_magic(\u001b[39m'\u001b[39m\u001b[39mmatplotlib\u001b[39m\u001b[39m'\u001b[39m, \u001b[39m'\u001b[39m\u001b[39minline\u001b[39m\u001b[39m'\u001b[39m)\n\u001b[0;32m---> 15\u001b[0m corrmat \u001b[39m=\u001b[39m data\u001b[39m.\u001b[39;49mcorr()\n\u001b[1;32m     16\u001b[0m f, ax \u001b[39m=\u001b[39m plt\u001b[39m.\u001b[39msubplots(figsize\u001b[39m=\u001b[39m(\u001b[39m9\u001b[39m, \u001b[39m9\u001b[39m))\n\u001b[1;32m     17\u001b[0m sns\u001b[39m.\u001b[39mheatmap(corrmat, vmax\u001b[39m=\u001b[39m\u001b[39m.8\u001b[39m, square\u001b[39m=\u001b[39m\u001b[39mTrue\u001b[39;00m)\n",
					"File \u001b[0;32m~/.local/lib/python3.10/site-packages/pandas/core/frame.py:10059\u001b[0m, in \u001b[0;36mDataFrame.corr\u001b[0;34m(self, method, min_periods, numeric_only)\u001b[0m\n\u001b[1;32m  10057\u001b[0m cols \u001b[39m=\u001b[39m data\u001b[39m.\u001b[39mcolumns\n\u001b[1;32m  10058\u001b[0m idx \u001b[39m=\u001b[39m cols\u001b[39m.\u001b[39mcopy()\n\u001b[0;32m> 10059\u001b[0m mat \u001b[39m=\u001b[39m data\u001b[39m.\u001b[39;49mto_numpy(dtype\u001b[39m=\u001b[39;49m\u001b[39mfloat\u001b[39;49m, na_value\u001b[39m=\u001b[39;49mnp\u001b[39m.\u001b[39;49mnan, copy\u001b[39m=\u001b[39;49m\u001b[39mFalse\u001b[39;49;00m)\n\u001b[1;32m  10061\u001b[0m \u001b[39mif\u001b[39;00m method \u001b[39m==\u001b[39m \u001b[39m\"\u001b[39m\u001b[39mpearson\u001b[39m\u001b[39m\"\u001b[39m:\n\u001b[1;32m  10062\u001b[0m     correl \u001b[39m=\u001b[39m libalgos\u001b[39m.\u001b[39mnancorr(mat, minp\u001b[39m=\u001b[39mmin_periods)\n",
					"File \u001b[0;32m~/.local/lib/python3.10/site-packages/pandas/core/frame.py:1838\u001b[0m, in \u001b[0;36mDataFrame.to_numpy\u001b[0;34m(self, dtype, copy, na_value)\u001b[0m\n\u001b[1;32m   1836\u001b[0m \u001b[39mif\u001b[39;00m dtype \u001b[39mis\u001b[39;00m \u001b[39mnot\u001b[39;00m \u001b[39mNone\u001b[39;00m:\n\u001b[1;32m   1837\u001b[0m     dtype \u001b[39m=\u001b[39m np\u001b[39m.\u001b[39mdtype(dtype)\n\u001b[0;32m-> 1838\u001b[0m result \u001b[39m=\u001b[39m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_mgr\u001b[39m.\u001b[39;49mas_array(dtype\u001b[39m=\u001b[39;49mdtype, copy\u001b[39m=\u001b[39;49mcopy, na_value\u001b[39m=\u001b[39;49mna_value)\n\u001b[1;32m   1839\u001b[0m \u001b[39mif\u001b[39;00m result\u001b[39m.\u001b[39mdtype \u001b[39mis\u001b[39;00m \u001b[39mnot\u001b[39;00m dtype:\n\u001b[1;32m   1840\u001b[0m     result \u001b[39m=\u001b[39m np\u001b[39m.\u001b[39marray(result, dtype\u001b[39m=\u001b[39mdtype, copy\u001b[39m=\u001b[39m\u001b[39mFalse\u001b[39;00m)\n",
					"File \u001b[0;32m~/.local/lib/python3.10/site-packages/pandas/core/internals/managers.py:1732\u001b[0m, in \u001b[0;36mBlockManager.as_array\u001b[0;34m(self, dtype, copy, na_value)\u001b[0m\n\u001b[1;32m   1730\u001b[0m         arr\u001b[39m.\u001b[39mflags\u001b[39m.\u001b[39mwriteable \u001b[39m=\u001b[39m \u001b[39mFalse\u001b[39;00m\n\u001b[1;32m   1731\u001b[0m \u001b[39melse\u001b[39;00m:\n\u001b[0;32m-> 1732\u001b[0m     arr \u001b[39m=\u001b[39m \u001b[39mself\u001b[39;49m\u001b[39m.\u001b[39;49m_interleave(dtype\u001b[39m=\u001b[39;49mdtype, na_value\u001b[39m=\u001b[39;49mna_value)\n\u001b[1;32m   1733\u001b[0m     \u001b[39m# The underlying data was copied within _interleave, so no need\u001b[39;00m\n\u001b[1;32m   1734\u001b[0m     \u001b[39m# to further copy if copy=True or setting na_value\u001b[39;00m\n\u001b[1;32m   1736\u001b[0m \u001b[39mif\u001b[39;00m na_value \u001b[39mis\u001b[39;00m \u001b[39mnot\u001b[39;00m lib\u001b[39m.\u001b[39mno_default:\n",
					"File \u001b[0;32m~/.local/lib/python3.10/site-packages/pandas/core/internals/managers.py:1794\u001b[0m, in \u001b[0;36mBlockManager._interleave\u001b[0;34m(self, dtype, na_value)\u001b[0m\n\u001b[1;32m   1792\u001b[0m     \u001b[39melse\u001b[39;00m:\n\u001b[1;32m   1793\u001b[0m         arr \u001b[39m=\u001b[39m blk\u001b[39m.\u001b[39mget_values(dtype)\n\u001b[0;32m-> 1794\u001b[0m     result[rl\u001b[39m.\u001b[39;49mindexer] \u001b[39m=\u001b[39m arr\n\u001b[1;32m   1795\u001b[0m     itemmask[rl\u001b[39m.\u001b[39mindexer] \u001b[39m=\u001b[39m \u001b[39m1\u001b[39m\n\u001b[1;32m   1797\u001b[0m \u001b[39mif\u001b[39;00m \u001b[39mnot\u001b[39;00m itemmask\u001b[39m.\u001b[39mall():\n",
					"\u001b[0;31mValueError\u001b[0m: could not convert string to float: 'LP001002 '"
				]
			}
		},
		"outputItems": [
			{
				"mimeType": "application/vnd.code.notebook.error",
				"data": "{\n\t\"name\": \"ValueError\",\n\t\"message\": \"could not convert string to float: 'LP001002 '\",\n\t\"stack\": \"\\u001b[0;31m---------------------------------------------------------------------------\\u001b[0m\\n\\u001b[0;31mValueError\\u001b[0m                                Traceback (most recent call last)\\nCell \\u001b[0;32mIn[56], line 15\\u001b[0m\\n\\u001b[1;32m     13\\u001b[0m \\u001b[39mimport\\u001b[39;00m \\u001b[39mseaborn\\u001b[39;00m \\u001b[39mas\\u001b[39;00m \\u001b[39msns\\u001b[39;00m\\n\\u001b[1;32m     14\\u001b[0m get_ipython()\\u001b[39m.\\u001b[39mrun_line_magic(\\u001b[39m'\\u001b[39m\\u001b[39mmatplotlib\\u001b[39m\\u001b[39m'\\u001b[39m, \\u001b[39m'\\u001b[39m\\u001b[39minline\\u001b[39m\\u001b[39m'\\u001b[39m)\\n\\u001b[0;32m---> 15\\u001b[0m corrmat \\u001b[39m=\\u001b[39m data\\u001b[39m.\\u001b[39;49mcorr()\\n\\u001b[1;32m     16\\u001b[0m f, ax \\u001b[39m=\\u001b[39m plt\\u001b[39m.\\u001b[39msubplots(figsize\\u001b[39m=\\u001b[39m(\\u001b[39m9\\u001b[39m, \\u001b[39m9\\u001b[39m))\\n\\u001b[1;32m     17\\u001b[0m sns\\u001b[39m.\\u001b[39mheatmap(corrmat, vmax\\u001b[39m=\\u001b[39m\\u001b[39m.8\\u001b[39m, square\\u001b[39m=\\u001b[39m\\u001b[39mTrue\\u001b[39;00m)\\n\\nFile \\u001b[0;32m~/.local/lib/python3.10/site-packages/pandas/core/frame.py:10059\\u001b[0m, in \\u001b[0;36mDataFrame.corr\\u001b[0;34m(self, method, min_periods, numeric_only)\\u001b[0m\\n\\u001b[1;32m  10057\\u001b[0m cols \\u001b[39m=\\u001b[39m data\\u001b[39m.\\u001b[39mcolumns\\n\\u001b[1;32m  10058\\u001b[0m idx \\u001b[39m=\\u001b[39m cols\\u001b[39m.\\u001b[39mcopy()\\n\\u001b[0;32m> 10059\\u001b[0m mat \\u001b[39m=\\u001b[39m data\\u001b[39m.\\u001b[39;49mto_numpy(dtype\\u001b[39m=\\u001b[39;49m\\u001b[39mfloat\\u001b[39;49m, na_value\\u001b[39m=\\u001b[39;49mnp\\u001b[39m.\\u001b[39;49mnan, copy\\u001b[39m=\\u001b[39;49m\\u001b[39mFalse\\u001b[39;49;00m)\\n\\u001b[1;32m  10061\\u001b[0m \\u001b[39mif\\u001b[39;00m method \\u001b[39m==\\u001b[39m \\u001b[39m\\\"\\u001b[39m\\u001b[39mpearson\\u001b[39m\\u001b[39m\\\"\\u001b[39m:\\n\\u001b[1;32m  10062\\u001b[0m     correl \\u001b[39m=\\u001b[39m libalgos\\u001b[39m.\\u001b[39mnancorr(mat, minp\\u001b[39m=\\u001b[39mmin_periods)\\n\\nFile \\u001b[0;32m~/.local/lib/python3.10/site-packages/pandas/core/frame.py:1838\\u001b[0m, in \\u001b[0;36mDataFrame.to_numpy\\u001b[0;34m(self, dtype, copy, na_value)\\u001b[0m\\n\\u001b[1;32m   1836\\u001b[0m \\u001b[39mif\\u001b[39;00m dtype \\u001b[39mis\\u001b[39;00m \\u001b[39mnot\\u001b[39;00m \\u001b[39mNone\\u001b[39;00m:\\n\\u001b[1;32m   1837\\u001b[0m     dtype \\u001b[39m=\\u001b[39m np\\u001b[39m.\\u001b[39mdtype(dtype)\\n\\u001b[0;32m-> 1838\\u001b[0m result \\u001b[39m=\\u001b[39m \\u001b[39mself\\u001b[39;49m\\u001b[39m.\\u001b[39;49m_mgr\\u001b[39m.\\u001b[39;49mas_array(dtype\\u001b[39m=\\u001b[39;49mdtype, copy\\u001b[39m=\\u001b[39;49mcopy, na_value\\u001b[39m=\\u001b[39;49mna_value)\\n\\u001b[1;32m   1839\\u001b[0m \\u001b[39mif\\u001b[39;00m result\\u001b[39m.\\u001b[39mdtype \\u001b[39mis\\u001b[39;00m \\u001b[39mnot\\u001b[39;00m dtype:\\n\\u001b[1;32m   1840\\u001b[0m     result \\u001b[39m=\\u001b[39m np\\u001b[39m.\\u001b[39marray(result, dtype\\u001b[39m=\\u001b[39mdtype, copy\\u001b[39m=\\u001b[39m\\u001b[39mFalse\\u001b[39;00m)\\n\\nFile \\u001b[0;32m~/.local/lib/python3.10/site-packages/pandas/core/internals/managers.py:1732\\u001b[0m, in \\u001b[0;36mBlockManager.as_array\\u001b[0;34m(self, dtype, copy, na_value)\\u001b[0m\\n\\u001b[1;32m   1730\\u001b[0m         arr\\u001b[39m.\\u001b[39mflags\\u001b[39m.\\u001b[39mwriteable \\u001b[39m=\\u001b[39m \\u001b[39mFalse\\u001b[39;00m\\n\\u001b[1;32m   1731\\u001b[0m \\u001b[39melse\\u001b[39;00m:\\n\\u001b[0;32m-> 1732\\u001b[0m     arr \\u001b[39m=\\u001b[39m \\u001b[39mself\\u001b[39;49m\\u001b[39m.\\u001b[39;49m_interleave(dtype\\u001b[39m=\\u001b[39;49mdtype, na_value\\u001b[39m=\\u001b[39;49mna_value)\\n\\u001b[1;32m   1733\\u001b[0m     \\u001b[39m# The underlying data was copied within _interleave, so no need\\u001b[39;00m\\n\\u001b[1;32m   1734\\u001b[0m     \\u001b[39m# to further copy if copy=True or setting na_value\\u001b[39;00m\\n\\u001b[1;32m   1736\\u001b[0m \\u001b[39mif\\u001b[39;00m na_value \\u001b[39mis\\u001b[39;00m \\u001b[39mnot\\u001b[39;00m lib\\u001b[39m.\\u001b[39mno_default:\\n\\nFile \\u001b[0;32m~/.local/lib/python3.10/site-packages/pandas/core/internals/managers.py:1794\\u001b[0m, in \\u001b[0;36mBlockManager._interleave\\u001b[0;34m(self, dtype, na_value)\\u001b[0m\\n\\u001b[1;32m   1792\\u001b[0m     \\u001b[39melse\\u001b[39;00m:\\n\\u001b[1;32m   1793\\u001b[0m         arr \\u001b[39m=\\u001b[39m blk\\u001b[39m.\\u001b[39mget_values(dtype)\\n\\u001b[0;32m-> 1794\\u001b[0m     result[rl\\u001b[39m.\\u001b[39;49mindexer] \\u001b[39m=\\u001b[39m arr\\n\\u001b[1;32m   1795\\u001b[0m     itemmask[rl\\u001b[39m.\\u001b[39mindexer] \\u001b[39m=\\u001b[39m \\u001b[39m1\\u001b[39m\\n\\u001b[1;32m   1797\\u001b[0m \\u001b[39mif\\u001b[39;00m \\u001b[39mnot\\u001b[39;00m itemmask\\u001b[39m.\\u001b[39mall():\\n\\n\\u001b[0;31mValueError\\u001b[0m: could not convert string to float: 'LP001002 '\"\n}"
			}
		]
	}
]
